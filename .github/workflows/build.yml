name: Build GUI (GTK on Linux, Win32 on Windows)

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Check out
        uses: actions/checkout@v4

      # ---------- Linux (GTK) ----------
      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libgtk-3-dev cmake ninja-build
      - name: Configure (Ubuntu)
        if: runner.os == 'Linux'
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build (Ubuntu)
        if: runner.os == 'Linux'
        run: cmake --build build --config Release
      - name: Upload artifact (Ubuntu)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: iceprog_gui-ubuntu
          path: build/iceprog_gui

      # ---------- Windows (Native Win32, no external DLLs) ----------
      # Use Visual Studio generator so we can pass --config Release
      - name: Configure (Windows / Win32)
        if: runner.os == 'Windows'
        shell: pwsh
        run: >
          cmake -S . -B build
          -G "Visual Studio 17 2022"
          -A x64
          -DUSE_GTK=OFF
      - name: Build (Windows / Win32)
        if: runner.os == 'Windows'
        shell: pwsh
        run: cmake --build build --config Release
      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: iceprog_gui-windows
          path: build/Release/iceprog_gui.exe
